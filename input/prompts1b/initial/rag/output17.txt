To properly parse the QUIC Initial Packet from the provided hex string (`c50000000108e2dfe628b3ad99d3081d5b0380bd0c3907004098f2f2fd284fbe7dc6136d192a90e62f70a203e4040f860963b854292296cdc6b697e0fc852582a647c9bb3046289e87066407a89c391de0381c8a6fc836efce206a2142f3ff0c91204562f741df03bd6f77e41772debfe86adaadb07e357dfec36f13c384d11d81e993b6594f89a36be8de03f2b8d851de438b457c1b15d3c614d945a598d750147a04d6ba6b30a76149225f7aa5cfdf415b`), we need to decode each value step-by-step.

### Breaking Down the Hex String

1. **Header Form (1 bit)**: 
    - 0x1 
      - This indicates a Long Header (Initial Packet).

2. **Fixed Bit (1 bit)**: 
    - 0x1 
      - Indicated by a fixed value of 1.

3. **Long Packet Type (2 bits)**: 
    - 0x0 
      - Identified as an Initial Packet.

4. **Reserved Bits (2 bits)**: 
    - Extracted from the third nibble of the first byte in combination with the Packet Number Length (Let's decode further to identify this correctly).

5. **Packet Number Length (2 bits)**:  
    - Derived based on following byte values (decoding needed combined with Reserved Bits).

6. **Version (32 bits)**:
    - 0x00000001 
      - Indicates QUIC version 1.

7. **Destination Connection ID Length (8 bits)**: 
    - 0x08 
      - Destination Connection ID length = 8 bytes.

8. **Destination Connection ID (0..160 bits)**:
    - 0xe2dfe628b3ad99d3
      - 8 bytes extracted as specified.

9. **Source Connection ID Length (8 bits)**: 
    - 0x08 
      - Source Connection ID length = 8 bytes.

10. **Source Connection ID (0..160 bits)**:
    - 0x081d5b0380bd0c39
      - 8 bytes extracted as specified.

11. **Token Length (i)**: 
    - 0x07 
      - Token Length value indication (length included further).

12. **Token (variable length)**:
    - 0x004098f2f2fd284fbe7d
      - Token of 7 bytes as specified.

13. **Length (i)**: 
    - 0xbe7da6 
      - Parsed according to QUIC variable length encoding scheme.

14. **Packet Number (8..32 bits)**: 
    - 0xc613 
      - Extracted based on specified length in bits which could vary.

15. **Packet Payload (8..)**: 
    - Remaining payload.

Here's a detailed extraction and structure:

### Decoded Initial Packet
```json
"Initial Packet": { 
  "Header Form (1)": "0x1",
  "Fixed Bit (1)": "0x1", 
  "Long Packet Type (2)": "0x0", 
  "Reserved Bits (2)": "XX", // Needs context-specific derivation if '00'.
  "Packet Number Length (2)": "XX",  // Needs context-specific derivation if '00'.
  "Version (32)": "0x00000001", 
  "Destination Connection ID Length (8)": "0x08", 
  "Destination Connection ID (0..160)": "0xe2dfe628b3ad99d3", 
  "Source Connection ID Length (8)": "0x08", 
  "Source Connection ID (0..160)": "0x081d5b0380bd0c39", 
  "Token Length (i)": "0x07", 
  "Token (..)": "0x004098f2f2fd284fbe7d",
  "Length (i)": "0xbe7da6", 
  "Packet Number (8..32)": "0xc613", 
  "Packet Payload (8..)": "6d192a90e62f70a203e4040f860963b854292296cdc6b697e0fc852582a647c9bb3046289e87066407a89c391de0381c8a6fc836efce206a2142f3ff0c91204562f741df03bd6f77e41772debfe86adaadb07e357dfec36f13c384d11d81e993b6594f89a36be8de03f2b8d851de438b457c1b15d3c614d945a598d750147a04d6ba6b30a76149225f7aa5cfdf415b" 
}
```

### Specifics:
- **"Reserved Bits"**: Context is generally kept '0' or fixed value unless specified by traffic/session.
- **"Packet Length includable field"**: Value derivation based on the encoding lengthper session. 

This should be a suitable interpretation of parsing the packet fields from the given bytestream based on the RFC 9000 QUIC Protocol.