{"custom_id": "request-1", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-2", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-3", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-4", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-5", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-6", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-7", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-8", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-9", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-10", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-11", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-12", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-13", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-14", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-15", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-16", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-17", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-18", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-19", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-20", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-21", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-22", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-23", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-24", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-25", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-26", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-27", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-28", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-29", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-30", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-31", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-32", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-33", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-34", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-35", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-36", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-37", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-38", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-39", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-40", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-41", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-42", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-43", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-44", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-45", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-46", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-47", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-48", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-49", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
{"custom_id": "request-50", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "Instruction:\nFor the RFC 9000 QUIC protocol, all of Long Header and Short Header Packet Type grammar is:\nDesired Format:\nShot-1:\nFor the QUIC protocol, the Long Header Packet Type is: Retry Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Unused (4): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Retry Token (..): <Value>\r\n, Retry Integrity Tag (128) <Value>\r\n}\nShot-2:\nFor the QUIC protocol, the Long Header Packet Type is: 0-RTT Packet: {Header Form (1): <Value>\r\n, Fixed Bit (1): <Value>\r\n, Long Packet Type (2): <Value>\r\n, Reserved Bits (2): <Value>\r\n, Packet Number Length (2): <Value>\r\n, Version (32): <Value>\r\n, Destination Connection ID Length (8): <Value>\r\n, Destination Connection ID (0..160): <Value>\r\n, Source Connection ID Length (8): <Value>\r\n, Source Connection ID (0..160): <Value>\r\n, Length (i): <Value>\r\n, Packet Number (8..32): <Value>\r\n, Packet Payload (8..): <Value>\r\n}"}],"max_tokens": 1000}}
