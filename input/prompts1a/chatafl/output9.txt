Sure, here is the information on other Long Header and Short Header Packet Types according to RFC 9000 QUIC protocol:

Shot-1:
For the QUIC protocol, the Long Header Packet Type is: Initial Packet: {Header Form (1): <Value>
, Fixed Bit (1): <Value>
, Long Packet Type (2): <Value>
, Reserved Bits (2): <Value>
, Packet Number Length (2): <Value>
, Version (32): <Value>
, Destination Connection ID Length (8): <Value>
, Destination Connection ID (0..160): <Value>
, Source Connection ID Length (8): <Value>
, Source Connection ID (0..160): <Value>
, Token Length (i): <Value>
, Token (..): <Value>
, Length (i): <Value>
, Packet Number (8..32): <Value>
, Packet Payload (8..): <Value>
}

Shot-2:
For the QUIC protocol, the Long Header Packet Type is: Handshake Packet: {Header Form (1): <Value>
, Fixed Bit (1): <Value>
, Long Packet Type (2): <Value>
, Reserved Bits (2): <Value>
, Packet Number Length (2): <Value>
, Version (32): <Value>
, Destination Connection ID Length (8): <Value>
, Destination Connection ID (0..160): <Value>
, Source Connection ID Length (8): <Value>
, Source Connection ID (0..160): <Value>
, Length (i): <Value>
, Packet Number (8..32): <Value>
, Packet Payload (8..): <Value>
}

Shot-3:
For the QUIC protocol, the Long Header Packet Type is: Protected Payload Packet: {Header Form (1): <Value>
, Fixed Bit (1): <Value>
, Long Packet Type (2): <Value>
, Reserved Bits (2): <Value>
, Packet Number Length (2): <Value>
, Version (32): <Value>
, Destination Connection ID Length (8): <Value>
, Destination Connection ID (0..160): <Value>
, Source Connection ID Length (8): <Value>
, Source Connection ID (0..160): <Value>
, Length (i): <Value>
, Packet Number (8..32): <Value>
, Packet Payload (8..): <Value>
}

Shot-4:
For the QUIC protocol, the Short Header Packet Type is: Short Header Packet: {Header Form (1): <Value>
, Fixed Bit (1): <Value>
, Spin Bit (1): <Value>
, Reserved Bits (2): <Value>
, Key Phase (1): <Value>
, Packet Number Length (2): <Value>
, Destination Connection ID (0..160): <Value>
, Packet Number (8..32): <Value>
, Packet Payload (8..): <Value>
}