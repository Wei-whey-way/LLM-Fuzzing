Sure! Here are the rest of the packet grammars specified in the RFC9000 for the QUIC protocol:

Shot-3:
For the QUIC protocol, the Initial Packet client request format is below. See RFC9000 for set bytes.
Initial Packet: {Header Form (1): <Value>
 Fixed Bit (1): <Value>
 Long Packet Type (2): <Value>
 Reserved Bits (2): <Value>
 Packet Number Length (2): <Value>
 Version (32): <Value>
 Destination Connection ID Length (8): <Value>
 Destination Connection ID (0..160): <Value>
 Source Connection ID Length (8): <Value>
 Source Connection ID (0..160): <Value>
 Token Length (i): <Value>
 Token (..): <Value>
 Length (i): <Value>
 Packet Number (8..32): <Value>
 Packet Payload (8..): <Value>
}

Shot-4:
For the QUIC protocol, the Short Header Packet client request format is below. See RFC9000 for set bytes.
Short Header Packet: {Header Form (1): <Value>
 Fixed Bit (1): <Value>
 Spin Bit (1): <Value>
 Reserved Bits (2): <Value>
 Key Phase (1): <Value>
 Packet Number Length (2): <Value>
 Destination Connection ID (0..160): <Value>
 Packet Number (8..32): <Value>
 Packet Payload (8..): <Value>
}

Shot-5:
For the QUIC protocol, the Handshake Packet client request format is below. See RFC9000 for set bytes.
Handshake Packet: {Header Form (1): <Value>
 Fixed Bit (1): <Value>
 Long Packet Type (2): <Value>
 Reserved Bits (2): <Value>
 Packet Number Length (2): <Value>
 Version (32): <Value>
 Destination Connection ID Length (8): <Value>
 Destination Connection ID (0..160): <Value>
 Source Connection ID Length (8): <Value>
 Source Connection ID (0..160): <Value>
 Length (i): <Value>
 Packet Number (8..32): <Value>
 Packet Payload (8..): <Value>
}